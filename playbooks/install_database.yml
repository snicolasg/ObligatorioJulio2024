---
- name: Configuro servidor base de datos en ubuntu
  hosts: database
  become: true
  user: sysadmin

  tasks:

## Instalación de base de datos
  - name: MariaDB instalado
    ansible.builtin.apt:
      name: mariadb-server
      state: present
      update-cache: true
    loop:
      - mariadb-server
      - mariadb-client
      - python3-pymysql

  - name: Cambiar la configuracion para escuchar en todas las interfaces
    ansible.builtin.lineinfile:
      path: /etc/mysql/mariadb.conf.d/50-server.cnf
      regexp: '^bind-address'
      line: 'bind-address         = 0.0.0.0'
    notify: Restart mariadb

  - name: Ejecuto el handler si cambió la configuración
    meta: flush_handlers

  - name: Servidor Mariadb levantado
    ansible.builtin.systemd_service: 
      name: mariadb
      state: started
      enabled: true

  - name: Habilitamos en ufw la conexión a mariadb
    community.general.ufw:
      rule: allow
      port: '3306'
      protocol: tcp
      direction: in

##  Configuracion de la base de datos de la aplicación

  - name: Copio el dump de la base de datos
    ansible.builtin.copy:
      src: /home/sysadmin/ObligatorioJulio2024/files/todo.sql
      dest: /tmp/todo.sql


        ##############

  - name: Vemos si la base de datos existe
    community.mysql.mysql_db:
      login_unix_socket: /run/mysqld/mysqld.sock
      name: todo
      state: present
    register: db_exists
            
    ########################

  - name: debug
    ansible.builtin.debug:
      msg: "{{ db_exists }}"



  - name: Creo la base de datos todo
    community.mysql.mysql_db:
#      check_implicit_admin: true
#      login_host: localhost 
      login_unix_socket: /run/mysqld/mysqld.sock
#      login_user: root
#      login_password: dbadmin
      name: todo
      state: import
      target: /tmp/todo.sql
    when: db_exists.changed


  handlers:

  - name: Restart mariadb
    ansible.builtin.systemd_service: 
      name: mariadb
      state: restarted
